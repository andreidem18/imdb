{
    "openapi": "3.0.0",
    "info": {
        "title": "IMDB REST API",
        "version": "1.0",
        "description": "rest API to watch movies info"
    },
    "servers": [
        {
            "url": "https://imdb3.herokuapp.com/api/v1",
            "description": "Production"
        },
        {
            "url": "http://localhost:8000/api/v1",
            "description": "Development"
        }
    ],
    "paths": {
        "/users":{
            "get":{
                "description": "To get all actors",
                "responses":{
                    "200":{
                        "description": "Users have been gotten correctly"
                    }
                },
                "tags": ["Users"]
            },
            "post":{
                "description": "To add a new user. It sends a email to verify the email address and activate the user",
                "responses": {
                    "201":{
                        "description": "User added correctly"
                    }
                },
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "$ref": "#/components/schemas/Users"
                            }
                        }
                    }
                },
                "tags": ["Users"]
            }
        },
        "/users/:id":{
            "get": {
                "description": "To get a particular user",
                "responses": {
                    "200":{
                        "description": "User gotten correctly"
                    }
                },
                "tags": ["Users"]
            },
            "delete": {
                "description": "To delete an user",
                "responses": {
                    "200":{
                        "description": "User deleted"
                    }
                },
                "tags": ["Users"]
            },
            "put": {
                "description": "To update an user",
                "responses": {
                    "200":{
                        "description": "User updated"
                    }
                },
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "$ref": "#/components/schemas/Users"
                            }
                        }
                    }
                },
                "tags": ["Users"]
            }
        },
        "/login":{
            "post":{
                "description": "To login and generate a new Token",
                "responses": {
                    "201":{
                        "description": "Logged correctly"
                    }
                },
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "$ref": "#/components/schemas/Login"
                            }
                        }
                    }
                },
                "tags": ["Users"]
            }
        },
        "/actors":{
            "get":{
                "description": "To get all actors",
                "responses":{
                    "200":{
                        "description": "Actors have been gotten correctly"
                    }
                },
                "tags": ["Actors"]
            },
            "post":{
                "description": "To add a new actor",
                "responses": {
                    "201":{
                        "description": "Actor added correctly"
                    }
                },
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "$ref": "#/components/schemas/Actors"
                            }
                        }
                    }
                },
                "tags": ["Actors"]
            }
        },
        "/actors/:id":{
            "get": {
                "description": "To get an particular actor",
                "responses": {
                    "200":{
                        "description": "Actor gotten correctly"
                    }
                },
                "tags": ["Actors"]
            },
            "delete": {
                "description": "To delete an actor",
                "responses": {
                    "200":{
                        "description": "Actor deleted"
                    }
                },
                "tags": ["Actors"]
            },
            "put": {
                "description": "To update an actor",
                "responses": {
                    "200":{
                        "description": "Actor updated"
                    }
                },
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "$ref": "#/components/schemas/Actors"
                            }
                        }
                    }
                },
                "tags": ["Actors"]
            }
        },
        "/genres":{
            "get":{
                "description": "To get all genres",
                "responses":{
                    "200":{
                        "description": "Genres have been gotten correctly"
                    }
                },
                "tags": ["Genres"]
            },
            "post":{
                "description": "To add a new genre",
                "responses": {
                    "201":{
                        "description": "Genre added correctly"
                    }
                },
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "$ref": "#/components/schemas/Genres"
                            }
                        }
                    }
                },
                "tags": ["Genres"]
            }
        },
        "/genres/:id":{
            "get": {
                "description": "To get a particular genre",
                "responses": {
                    "200":{
                        "description": "Genre gotten correctly"
                    }
                },
                "tags": ["Genres"]
            },
            "delete": {
                "description": "To delete a genre",
                "responses": {
                    "200":{
                        "description": "Genre deleted"
                    }
                },
                "tags": ["Genres"]
            },
            "put": {
                "description": "To update a genre",
                "responses": {
                    "200":{
                        "description": "Genre updated"
                    }
                },
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "$ref": "#/components/schemas/Genres"
                            }
                        }
                    }
                },
                "tags": ["Genres"]
            }
        },
        "/contents":{
            "get":{
                "description": "To get all contents (movies and series)",
                "responses":{
                    "200":{
                        "description": "Contents have been gotten correctly"
                    }
                },
                "tags": ["Contents (movies and series)"]
            },
            "post":{
                "description": "To add a new content (movies and series)",
                "responses": {
                    "201":{
                        "description": "Content added correctly"
                    }
                },
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "$ref": "#/components/schemas/Contents"
                            }
                        }
                    }
                },
                "tags": ["Contents (movies and series)"]
            }
        },
        "/contents/:id":{
            "get": {
                "description": "To get a particular content",
                "responses": {
                    "200":{
                        "description": "Content gotten correctly"
                    }
                },
                "tags": ["Contents (movies and series)"]
            },
            "delete": {
                "description": "To delete a content",
                "responses": {
                    "200":{
                        "description": "Content deleted"
                    }
                },
                "tags": ["Contents (movies and series)"]
            },
            "put": {
                "description": "To update a content",
                "responses": {
                    "200":{
                        "description": "Content updated"
                    }
                },
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "$ref": "#/components/schemas/Contents"
                            }
                        }
                    }
                },
                "tags": ["Contents (movies and series)"]
            }
        }
    },
    "components": {
        "schemas": {
            "Actors":{
                "properties":{
                    "firstname":{
                        "type": "string",
                        "example": "Tom"
                    },
                    "lastname":{
                        "type": "string",
                        "example": "Cruise"
                    },
                    "dob": {
                        "type": "string",
                        "description": "date of birthday (YYYY-MM-DD)",
                        "example": "1962-07-03"
                    },
                    "biography": {
                        "type": "string",
                        "example": "Thomas Cruise Mapother IV is an American actor and produces. He has received various accolades for his work. He is one of the highest-apid actors in the world."
                    },
                    "profile_photo": {
                        "type": "string",
                        "description": "url to the actor photo",
                        "example": "https://www.lecturas.com/medio/2020/09/30/tom-cruise_78749965_800x800.jpg"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "Genres":{
                "properties":{
                    "name":{
                        "type": "string",
                        "example": "Comedy"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "Contents":{
                "properties":{
                    "title":{
                        "type": "string",
                        "example": "Rambo"
                    },
                    "description":{
                        "type": "string",
                        "example": "A veteran Green Beret is forced by a cruel Sheriff and his deputies to flee into the mountains and wage an escalating one-man war against his pursuers."
                    },
                    "total_seasons": {
                        "type": "integer",
                        "description": "If it isn't a TV serie, put 0",
                        "example": 0
                    },
                    "imdb_score": {
                        "type": "number",
                        "example": 7.7
                    },
                    "relase_date": {
                        "type": "string",
                        "description": "(YYYY-MM-DD)",
                        "example": "1982-10-22"
                    },
                    "play_time": {
                        "type": "integer",
                        "description": "Duration in minutes",
                        "example": 93
                    },
                    "photo_link": {
                        "type": "string",
                        "example": "https://m.media-amazon.com/images/M/MV5BODBmOWU2YWMtZGUzZi00YzRhLWJjNDAtYTUwNWVkNDcyZmU5XkEyXkFqcGdeQXVyNDk3NzU2MTQ@._V1_UX182_CR0,0,182,268_AL_.jpg"
                    },
                    "imdb_link": {
                        "type": "string",
                        "example": "https://www.imdb.com/title/tt0083944/"
                    },
                    "active": {
                        "type": "boolean",
                        "example": true
                    },
                    "actors": {
                        "type": "array",
                        "description": "array with the actor's id who participated in the movie",
                        "example": [2]
                    },
                    "directors": {
                        "type": "array",
                        "description": "array with the director's id who participated in the movie",
                        "example": [10]
                    },
                    "genres": {
                        "type": "array",
                        "description": "array with the director's id of the movie",
                        "example": [2, 6]
                    }
                }
            },
            "Users":{
                "properties":{
                    "firstname":{
                        "type": "string",
                        "example": "Pablo"
                    },
                    "lastname":{
                        "type": "string",
                        "example": "Brown"
                    },
                    "email": {
                        "type": "string",
                        "example": "pablo@hotmail.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "pablo123"
                    }
                }
            },
            "Login":{
                "properties": {
                    "email":{
                        "type": "string",
                        "example": "juan@hotmail.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "juan123"
                    }
                }
            }
        }
    }
}